version: 2.1

orbs:
  win: circleci/windows@5.0
  go: circleci/go@1.11

env: &env
  environment:
    GO111MODULE: auto
    GRUNTWORK_INSTALLER_VERSION: v0.0.36
    MODULE_CI_VERSION: v0.54.0
    TERRATEST_LOG_PARSER_VERSION: v0.37.0
    GOLANG_VERSION: 1.21.1
    # Configuration to clone repo
    GOPRIVATE: "github.com/gruntwork-io/*"

defaults: &defaults
  machine:
    enabled: true
    image: ubuntu-2004:2022.10.1
  <<: *env

run_precommit: &run_precommit
  # Fail the build if the pre-commit hooks don't pass. Note: if you run $ pre-commit install locally within this repo, these hooks will
  # execute automatically every time before you commit, ensuring the build never fails at this step!
  name: run pre-commit hooks
  command: |
    pre-commit install
    pre-commit run --all-files

install_tofu: &install_tofu
  name: Install OpenTofu
  command: |
    pushd .
    cd /tmp
    curl -L "https://github.com/opentofu/opentofu/releases/download/v1.7.0/tofu_1.7.0_linux_amd64.zip" -o tofu.zip
    unzip -o tofu.zip
    sudo install -m 0755 tofu /usr/local/bin/tofu
    rm -rf tofu
    rm -rf tofu.zip
    popd
    tofu --version

install_gruntwork_utils: &install_gruntwork_utils
  name: install gruntwork utils
  command: |
    curl -Ls https://raw.githubusercontent.com/gruntwork-io/gruntwork-installer/master/bootstrap-gruntwork-installer.sh | bash /dev/stdin --version "${GRUNTWORK_INSTALLER_VERSION}"
    gruntwork-install --module-name "gruntwork-module-circleci-helpers" --repo "https://github.com/gruntwork-io/terraform-aws-ci" --tag "${MODULE_CI_VERSION}"
    gruntwork-install --module-name "git-helpers" --repo "https://github.com/gruntwork-io/terraform-aws-ci" --tag "${MODULE_CI_VERSION}"
    gruntwork-install --binary-name "terratest_log_parser" --repo "https://github.com/gruntwork-io/terratest" --tag "${TERRATEST_LOG_PARSER_VERSION}"
    configure-environment-for-gruntwork-module \
      --mise-version "NONE" \
      --terraform-version "NONE" \
      --terragrunt-version "NONE" \
      --packer-version "NONE" \
      --go-version ${GOLANG_VERSION}
#----------------------------------------------------------------------------------------------------------------------
# BUILD JOBS
#----------------------------------------------------------------------------------------------------------------------
jobs:
  precommit:
    <<: *env
    docker:
      - image: 087285199408.dkr.ecr.us-east-1.amazonaws.com/circle-ci-test-image-base:go1.21.9-tf1.5-tg39.1-pck1.8-ci54.0
    steps:
      - checkout
      # Fail the build if the pre-commit hooks don't pass. Note: if you run pre-commit install locally, these hooks will
      # execute automatically every time before you commit, ensuring the build never fails at this step!
      - run:
          <<: *run_precommit
  tests:
    <<: *defaults
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:R1U5ucEcu9pdl4mgfNo7kv7Lm6L4edvDSn9R3auqov4"
      - checkout
      - attach_workspace:
          at: /home/circleci
      - run:
          <<: *install_gruntwork_utils
      - run:
          <<: *install_tofu
      - run:
          name: Install tools
          command: |
            make tools
      - run:
          name: Tidy check
          command: |
            export GIT_SSH_COMMAND="ssh -i /home/circleci/.ssh/id_rsa_78a64a8391239adcd479c9be8b1903c7 -o IdentitiesOnly=yes"
            go mod tidy
      - run:
          name: Run lint
          command: |
            make lint
      - run:
          command: |
            mkdir -p logs
            run-go-tests --parallelism 1 --packages "$(go list ./... | grep -v /test | tr '\n' ' ')"  | tee logs/unit.log
      - run:
          name: Terratest log parser
          command: |
            terratest_log_parser --testlog logs/unit.log --outputdir logs
          when: always
      - store_artifacts:
          path: logs
      - store_test_results:
          path: logs
  integration_tests:
    <<: *defaults
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:R1U5ucEcu9pdl4mgfNo7kv7Lm6L4edvDSn9R3auqov4"
      - checkout
      - attach_workspace:
          at: /home/circleci
      - run:
          <<: *install_gruntwork_utils
      - run:
          <<: *install_tofu
      - run:
          name: Install tools
          command: |
            make tools
      - run:
          name: Tidy check
          command: |
            export GIT_SSH_COMMAND="ssh -i /home/circleci/.ssh/id_rsa_78a64a8391239adcd479c9be8b1903c7 -o IdentitiesOnly=yes"
            go mod tidy
      - run:
          command: |
            mkdir -p logs
            run-go-tests --packages "$(go list ./... | grep /test | tr '\n' ' ')" | tee logs/integration.log
      - run:
          name: Terratest log parser
          command: |
            terratest_log_parser --testlog logs/integration.log --outputdir logs
          when: always
      - store_artifacts:
          path: logs
      - store_test_results:
          path: logs
  test_windows:
    executor:
      name: win/default
      size: "large"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:R1U5ucEcu9pdl4mgfNo7kv7Lm6L4edvDSn9R3auqov4"
      - checkout
      - run:
          name: Install golang
          shell: powershell.exe
          command: ./.circleci/install-golang.ps1
      - run:
          name: Install Opentofu
          shell: powershell.exe
          command: ./.circleci/install-opentofu.ps1
      - run:
          name: Run go terraform tests
          shell: powershell.exe
          command: |
            # to save time, we're running the tests in one go
            $env:GIT_SSH_COMMAND="ssh -i /home/circleci/.ssh/id_rsa_78a64a8391239adcd479c9be8b1903c7 -o IdentitiesOnly=yes"
            echo $env:GIT_SSH_COMMAND
            
            go mod tidy
            go test -v ./...

  build:
    resource_class: xlarge
    <<: *defaults
    steps:
      - checkout
      - run: build-go-binaries --app-name terragrunt-engine --dest-path bin --ld-flags "-X github.com/gruntwork-io/go-commons/version.Version=$CIRCLE_TAG -extldflags '-static'"
      - persist_to_workspace:
          root: .
          paths: [bin]
#----------------------------------------------------------------------------------------------------------------------
# WORKFLOWS
#----------------------------------------------------------------------------------------------------------------------
workflows:
  version: 2
  build-and-test:
    jobs:
      - precommit:
          context:
            - AWS__PHXDEVOPS__circle-ci-test
            - GITHUB__PAT__gruntwork-ci
          filters:
            tags:
              only: /^v.*/
      - tests:
          context:
            - AWS__PHXDEVOPS__circle-ci-test
            - GITHUB__PAT__gruntwork-ci
            - SLACK__TOKEN__refarch-deployer-test
            - SLACK__WEBHOOK__refarch-deployer-test
            - SLACK__CHANNEL__test-workflow-approvals
          requires:
            - precommit
          filters:
            tags:
              only: /^v.*/
      - integration_tests:
          filters:
            tags:
              only: /^v.*/
          context:
            - AWS__PHXDEVOPS__circle-ci-test
            - GCP__automated-tests
            - GITHUB__PAT__gruntwork-ci
          requires:
            - precommit
      - test_windows:
          filters:
            tags:
              only: /^v.*/
          context:
            - AWS__PHXDEVOPS__circle-ci-test
            - GCP__automated-tests
            - GITHUB__PAT__gruntwork-ci
          requires:
            - precommit
      - build:
          filters:
            tags:
              only: /^v.*/
          context:
            - AWS__PHXDEVOPS__circle-ci-test
            - GCP__automated-tests
            - GITHUB__PAT__gruntwork-ci